version: '3'

services:
  app1:
    image: projet_web:latest
    build: ./app
    volumes:
      - app1_logs:/app/logs
    healthcheck:
      test: ["CMD", "sh", "-c", "curl --fail http://localhost:8000/health > /app/logs/app1_health_check.log"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  app2:
    image: projet_web:latest
    build: ./app
    volumes:
      - app2_logs:/app/logs
    healthcheck:
      test: ["CMD", "sh", "-c", "curl --fail http://localhost:8000/health > /app/logs/app2_health_check.log"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  load_balancer:
    image: projet_load_balancer:latest
    build: ./load_balancer
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"
    ports:
      - "80:80"
    healthcheck:
      test: ["CMD", "sh", "-c", "curl --fail http://localhost/health > /app/logs/load_balancer_health_check.log"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
  fluentd:
    build: ./fluentd
    volumes:
      - ./fluentd/conf/fluentd.conf:/fluentd/etc/fluentd.conf
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
    ports: 
      - 24224:24224
      - 24224:24224/udp

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    expose:
      - 9200
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes: 
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: kibana:8.7.1
    links: 
      - elasticsearch
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
volumes:
  app1_logs:
  app2_logs:
  esdata:

networks:
  default:
    external: true
    name: projetdocker_default
